---

- name: wsus setup and configuration
  hosts: windows

  vars:
    WSUS_SERVER: http://somewsusserver:8530

  tags: dev
  
  hosts: win_hosts
  order: inventory
  connection: winrm

  ignore_errors: false
  gather_facts: true

  pre_tasks:
    - name: Print all available facts
      ansible.builtin.debug:
        var: ansible_facts

    - name: check for os
      assert:
        that:
          - ansible_os_family == 'Windows'
        success_msg: "SUCCESS: OS is Windows"
        fail_msg: "FAIL: OS is NOT Windows"
  
  tasks:
    - block:
      - name: add to registry
        win_regedit:
          key: HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate
          value: WUServer
          data: "{{ WSUS_SERVER }}"
          datatype: string
        notify: report to wsus on change

      - name: set status server     
        win_regedit:
          key: HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate
          value: WUStatusServer
          data: "{{ WSUS_SERVER }}"
          datatype: string
        notify: report to wsus on change

      - name: set target group
        win_regedit:
          key: HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate
          value: TargetGroup
          data: "{{ hostvars[inventory_hostname].group_names[0] }}"
          datatype: string

      - name: configure windows updates
        win_regedit:
          key: HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate
          value: "{{ item.v }}"
          data: "{{ item.d }}"
          datatype: dword
        with_items:
          - { v: ElevateNonAdmins, d: "0" }
          - { v: TargetGroupEnabled, d: "1" }
          - { v: SetUpdateNotificationLevel, d: "1" }
          - { v: UpdateNotificationLevel, d: "2" }
          - { v: DoNotConnectToWindowsUpdateInternetLocations, d: "1" }
          - { v: DisableDualScan, d: "1" }
 
      - name: configure automatic updates
        win_regedit:
          key: HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU
          value: "{{ item.v }}"
          data: "{{ item.d }}"
          datatype: dword
        with_items:
          - { v: AUOptions, d: "3" }
          - { v: NoAutoUpdate, d: "1" }
          - { v: RebootWarningTimeoutEnabled, d: "1" }
          - { v: UseWUServer, d: "1" }
          - { v: NoAUShutdownOption, d: "1"}
   tags: registry
   
    - block:
      - name: select managed server and check for updates
        win_updates:
          category_names:
            â€“ CriticalUpdates
          state: searched
    tags: update

  handlers:
   - name: report to wsus on change
      win_shell: 'wuauclt.exe /resetauthorization /detectnow'
